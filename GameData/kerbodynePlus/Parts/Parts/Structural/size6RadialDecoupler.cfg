PART
{
	name = size6RadialDecoupler
	module = Part
	author = Bonus Eventus
	MODEL
	{
		model = kerbodynePlus/Parts/Structural/size6RadialDecoupler
		scale = 1.25,1.25,1.25
	}
	rescaleFactor = 1
	scale = 1.25
	node_attach = 0.0, 0.0, 0.0, 1.0, 0.0, 0.0
	fx_gasBurst_white = -0.0, 0.0, 0.0, -1.0, 0.0, 0.0, decouple
	sound_vent_large = decouple
	TechRequired = metaMaterials
	entryCost = 15000
	cost = 2000
	category = Structural
	subcategory = 0
	title = Kerbodyne S6 Radial Decoupler
	manufacturer = kerbodyne
	description = The Kerbodyne S6 Radial Decoupler is the only decoupler strong enough and tough enough to support the Behemoth Launch System.
	attachRules = 0,1,0,1,0
	mass = 1
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 1
	crashTolerance = 6
	PhysicsSignificance = 1
	breakingForce = 1200
    	breakingTorque = 1200
	maxTemp = 2000 // = 3200
	stagingIcon = DECOUPLER_HOR
	stageOffset = 1
	childStageOffset = 1
	bulkheadProfiles = kp, behemoth, srf
	tags = kerbodynePlus kerbodyne behemoth break decouple separat split stag behe
	fuelCrossFeed = False
	MODULE
	{
		name = ModuleAnchoredDecoupler
		anchorName = anchor
		ejectionForce = 1200
		explosiveNodeID = srf
	}
	MODULE
	{
		name = ModuleToggleCrossfeed
		crossfeedStatus = false
		toggleEditor = true
		toggleFlight = true
	}
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = False
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2000
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
	}
}
